server:
  port: 8080

#spring:
#  datasource:
#    url: ${SPRING_DATASOURCE_URL}
#    username: ${SPRING_DATASOURCE_USERNAME}
#    password: ${SPRING_DATASOURCE_PASSWORD}
#  jpa:
#    hibernate:
#      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.MySQL8Dialect

spring:
  datasource:
    url: "jdbc:mysql://localhost:3306/mydb?serverTimezone=UTC"
    username: root
    password: MYSQL_ROOT_PASSWORD
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    persistAuthorization: true  # keep token when refresh page
#    tryItOutEnabled: true  # Bật chế độ "Try it now"
#    add-authorization-header: false  # Auto add Authorization to request
#    default-consumes-media-type: application/json
#    default-produces-media-type: application/json

  default-consumes-media-type: application/json
  default-produces-media-type: application/json

api:
  servers:
    - url: http://192.168.0.1:8080
      description: Development Server
    - url: http://localhost:8080
      description: Staging Server
  info:
    title: "My Open API"
    version: "0.0.1"
    description: >
      springdoc-openapi java library helps to automate the generation of API documentation using spring boot projects.
      springdoc-openapi works by examining an application at runtime to infer API semantics based on spring configurations,
      class structure and various annotations. 

